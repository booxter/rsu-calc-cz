#!/usr/bin/env python3

import csv
from datetime import datetime
from decimal import Decimal
import math
import sys

if len(sys.argv) != 2:
    print("Format: %s <year>" % sys.argv[0])
    sys.exit(1)

# todo: this should be its own cli option
last_day_in_CZ = datetime(year=2016, month=12, day=24)

tax_year = int(sys.argv[1])
inputfile = "grants%d.csv" % tax_year

tax_rate = Decimal("0.15")
tax_payer_deduction = 24840
exchange_rates = {
    2017: Decimal("23.18"),
    2018: Decimal("21.78"),
}

def string_to_date(s):
    return datetime.strptime(s, "%m/%d/%Y")


def date_to_string(d):
    return d.strftime("%m/%d/%Y")


class VestingEvent:
    def __init__(self, d):
        self.granted_date = string_to_date(d['Granted'])
        self.vested_date = string_to_date(d['Vested'])
        self.num_shares = int(d['Shares'])
        self.usd_value = Decimal(d['Value'])

    def __str__(self):
        return (
            "%d shares ($%.2f) [%s -> %s]" % (
                self.num_shares, self.usd_value,
                date_to_string(self.granted_date),
                date_to_string(self.vested_date)
            )
        )


def get_vesting_events(filename):
    with open(filename, "r") as f:
        reader = csv.DictReader(f)
        for row in reader:
            yield VestingEvent(row)


to_pay_CZ = Decimal(0)
to_pay_US = Decimal(0)
total_value = Decimal(0)
for event in get_vesting_events(inputfile):
    days_in_CZ = (last_day_in_CZ - event.granted_date).days + 1
    days_in_US = (event.vested_date - last_day_in_CZ).days + 1
    total_days = (event.vested_date - event.granted_date).days
    to_pay_CZ += event.usd_value * days_in_CZ / total_days
    to_pay_US += event.usd_value * days_in_US / total_days
    total_value += event.usd_value

print("YEAR: %d" % tax_year)

print("Total value, USD:", total_value)
print("To pay, US: %.2f" % to_pay_US)
print("To pay, CZ: %.2f" % to_pay_CZ)

rate = exchange_rates[tax_year]
print("Exchange rate, CZ:", rate)

to_pay_in_CZK = to_pay_CZ * rate
print("To pay, CZ (in CZK): %.2f" % to_pay_in_CZK)

to_pay_in_CZK = round(to_pay_in_CZK)
print("Supergross income:", to_pay_in_CZK)

to_pay_in_CZK = math.floor(to_pay_in_CZK / 100) * 100
print("Tax base rounded:", to_pay_in_CZK)

to_pay_in_CZK *= tax_rate
print("Tax per paragraph 16:", to_pay_in_CZK)

to_pay_in_CZK -= tax_payer_deduction
print("Tax after deduction:", to_pay_in_CZK)

to_pay_in_USD = to_pay_in_CZK / rate
print("Tax after deduction (in USD): %.2f" % to_pay_in_USD)
